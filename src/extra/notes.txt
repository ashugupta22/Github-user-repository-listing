import './style.css';
import React, { useState } from 'react';
import { useEffect } from 'react';
import UserRepo from './UserRepo';
import Loading from './Loading';
function UserData() {

    const [users, setUsers] = useState([]);
    const [loading, setLoading] = useState(true);
    const [username, setUsername] = useState("");

    const changeHandler = event =>{
        setUsername(event.target.value);
    };

    const getUsers = async () => {
        try{
            setLoading(false);
            const response = await fetch(`https://api.github.com/users/${username}`);
        // console.log(response);
        // const data = await response.json();
        // console.log(data);
        setUsers(await response.json());
        }
        catch(error){
            console.log(error);
        }
        
    }

    useEffect(() => {
        getUsers();
    }, []);


    if (loading) {
        return <Loading />
    }

    return (
        <>
            <div className='container-fluid'>
                <div className='container-lg'>
                    <div className='row justify-content-start mt-5'>
                        <div className='col-2'>
                            <img className='roundimg' src={users.avatar_url} alt="profile image"></img>
                        </div>
                        <div className='col-4 ms-5 my-auto fw-bold'>
                            <h3 className='t-blue'>{users.name}</h3>
                            <p>{users.bio}</p>
                            <p><i className="fa-solid fa-location-dot me-3"></i>{users.location}</p>
                            <p><span className='me-2'>Twitter:</span><a href={'https://twitter.com/'+users.twitter_username}>{'@'+users.twitter_username}</a></p>
                        </div>
                        <div className='col-4'>
                            <input type="text" placeholder='Enter your username' value={username} onChange={changeHandler}></input>
                            <button type='submit' onClick={submitHandler}><i class="fa-brands fa-github"></i> Search</button>
                        </div>
                    </div>
                    <p className='mt-3 fw-bold'><i className="fa-solid fa-link"></i> <a href={users.html_url}>{users.html_url}</a></p>

                    <UserRepo />

                </div>
            </div>
        </>
    )
}
export default UserData;


//-------------userrepos-----------------------
import './style.css';
import React, { useState } from 'react';
import { useEffect } from 'react';
import ReactPaginate from 'react-paginate';

function UserRepo() {

    const [repos, setRepos] = useState([]);

    const getRepos = async () => {
        try {
            const response = await fetch(`https://api.github.com/users/mojombo/repos?page=1&per_page=10`);
            // console.log(response);
            // const data = await response.json();

            setRepos(await response.json());
            
        }
        catch (error) {
            console.log(error);
        }

    }

    useEffect(() => {
        getRepos();
    }, []);


    //pagination fetch data

    const fetchRepos = async (currentPage) => {
        const response = await fetch(`https://api.github.com/users/mojombo/repos?page=${currentPage}&per_page=10`);
        const data = await response.json();
        return data;
      };

      const handlePageClick = async (data) => {
        // console.log(data.selected);
    
        let currentPage = data.selected + 1
    
        const reposFormServer = await fetchRepos(currentPage);
    
        setRepos(reposFormServer);
      };



    return (
        <>
            <div className='container-fluid'>
                <div className='container-lg'>
                    <div className='row justify-content-between mt-5'>

                        {
                            repos.map((currElem) => {
                                return (
                                    <>
                                        <div className='col-md-5 carda'>
                                            <h4>{currElem.name}</h4>
                                            <p>{currElem.description}</p>
                                            <p className={currElem.language ? "btn b-blue text-white" : ""}>
                                            {currElem.language ? currElem.language : ""}
                                            </p>
                                            {/* <button type="button" className="btn b-blue text-white">{currElem.language}</button> */}
                                        </div>
                                    </>
                                )
                            })
                        }

                    </div>
                </div>
            </div>


            <ReactPaginate
                previousLabel={"<<"}
                nextLabel={">>"}
                breakLabel={"..."}
                pageCount={9}
                marginPagesDisplayed={2}
                pageRangeDisplayed={6}
                onPageChange={handlePageClick}
                containerClassName={"pagination justify-content-center my-5"}
                pageClassName={"page-item"}
                pageLinkClassName={"page-link"}
                previousClassName={"page-item"}
                previousLinkClassName={"page-link"}
                nextClassName={"page-item"}
                nextLinkClassName={"page-link"}
                breakClassName={"page-item"}
                breakLinkClassName={"page-link"}
                activeClassName={"active"}
            />
        </>
    )
}
export default UserRepo;